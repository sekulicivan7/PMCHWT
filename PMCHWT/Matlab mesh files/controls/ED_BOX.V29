% Create edit box in current window
% 
% ed_box(h_pos,v_pos,type,var,itx,text)
%
% h_pos	= Horizontal position of 1st character of variable name (characters)
%	  For type = 0 or 1, 	optionally h_pos(2) = Size (characters) of text window
%	  			optionally h_pos(3) = Size (characters) of edit window
%				for sliders h_pos(2) = Width (characters)
%					    h_pos(3) = Height (characters)
% v_pos	= Vertical position of 1st character of text (lines), from figure top
% type	= control type
%		0 = Numerical variable edit window
%		1 = String variable edit window.
%		2 = Push button
%		3 = Static text	
%		4 = Check box
%		5 = Frame (h_pos,v_pos,var,itx,text)->(x0,y0,width,height,[color])
%			color = [R_bg G_bg B_bg R_fg G_fg B_fg]
%			defaults: if lenght(color)<6, fg=[0 0 0]
%				  if lenght(color)<3, bg=get(gcf,'Color')
%		6 = Radio button. h_pos, v_pos, itx, text must be arrays
%		7 = Pop-up menu
%		8 = Matrix input
%		9 = Slider
% var	= variable name (string) for edit windows, or callback (string) for push buttons
% itx	= initial contents of the edit field (string or number), or text color [R G B],
%	  or [initial_value, [list of values for each radio button]]
%	  or [initial_value, min, max] for sliders
%	  For type=7, itx = column array of row-strings. 1st row = name of options file
%	  2ond row = default value
% text	= text
%
% version 2.9, Juan M. Rius, Carlos Perez Carpintero, July. 1996

function [ed,var]=ed_box(h_pos,v_pos,type,var,itx,text)

screen = get(0, 'ScreenSize');
CHH=get(gca,'FontSize')*(screen(3)/1024)*(20/12); CHW=CHH/2; SEP=CHH*1.25;	% Interline separation (pixels)
wpos=get(gcf,'Position'); H_SIZE=wpos(3)/CHW; V_SIZE=wpos(4)/SEP;
back = get(gcf,'Color');

v_pos = V_SIZE-v_pos;	% Vertical position from bottom instead of top        
ED_N=10;	% Size (characters) of number edit window (default)
SED_N=16;	% Size (characters) of string edit window (default)
STX_N=20;	% Size (characters) of text window (default)
NTX_N=20;	% Size (characters) of text window (default)

if type==9,
	ed_pos = [h_pos(1)*CHW v_pos*SEP h_pos(2)*CHW h_pos(3)*SEP-CHH];
	smin = num2str(itx(2)); lmin = (length(smin))*CHW;
	smax = num2str(itx(3)); lmax = (length(smax))*CHW;
	tit = num2str(itx(1));  ltex = (length(tit)+2)*CHW;
				lnom = (length(text))*CHW;
	
	uicontrol(gcf,'Style','Text','BackgroundColor',back,...
	'Position',[ed_pos(1)                ed_pos(2) lmin CHH],'String',smin);
	
	uicontrol(gcf,'Style','Text','BackgroundColor',back,...
	'Position',[ed_pos(1)+ed_pos(3)-lmax ed_pos(2) lmax CHH],'String',smax);

	uit = uicontrol(gcf,'Style','Text','BackgroundColor',back,...
	'Position',[ed_pos(1)+lnom+(ed_pos(3)-lnom-ltex)/2 ed_pos(2)+h_pos(3)*SEP-CHH ltex CHH],'String',tit);

	uicontrol(gcf,'Style','Text','BackgroundColor',back,...
	'Position',[ed_pos(1)+(ed_pos(3)-lnom-ltex)/2 ed_pos(2)+h_pos(3)*SEP-CHH lnom CHH],'String',text);
	
	ed_pos(1) = ed_pos(1) + lmin; ed_pos(3) = ed_pos(3) - lmin - lmax;
	call_st=['ed = get(gcf,''CurrentObject''); ' var '= get(ed,''Value'');'...
		'set(get(ed,''Userdata''),''String'',num2str(' var '));'];

	ed = uicontrol(gcf,'Style','Slider','Position',ed_pos,...
	'Min',itx(2),'Max',itx(3),'Value',itx(1),'UserData',uit,...
	'CallBack',call_st);
	return;
end

if type==5,
	bgcolor = back; fgcolor = [0 0 0]; % Defaults
	if     length(text)== 6, bgcolor = text(1:3); fgcolor = text(4:6);
	elseif length(text)== 3, bgcolor = text(1:3);
	end

	fr_pos = [h_pos(1)*CHW v_pos*SEP var*CHW itx*SEP];
	fr = uicontrol(gcf,'Style','frame','Position',fr_pos,...
	'BackGroundColor',bgcolor,'ForeGroundColor',fgcolor);
	ed = fr;								% Handle returned
	return;
end

if type==2, 
	pu_pos = [h_pos(1)*CHW v_pos*SEP (2+length(text))*CHW SEP];
	pu = uicontrol(gcf,'Style','push','Position',pu_pos,'String',text,...
	'Callback',var);
	ed = pu;								% Handle returned
	return
end

if type==3
	tit_pos = [h_pos(1)*CHW v_pos*SEP (1+length(text))*CHW CHH];
	tx = uicontrol(gcf,'Style','Text','String',text,'Position',tit_pos,...
	'BackGroundColor',back,'ForeGroundColor',itx,...
	'HorizontalAlignment','Left');
	ed = tx;								% Handle returned
	return
end

if type==4
	cb_pos = [h_pos(1)*CHW v_pos*SEP (length(text)+2)*CHW SEP];
	ed = uicontrol(gcf,'Style','checkbox','Position',cb_pos,'String',text,...
	'BackGroundColor',back,'ForeGroundColor',[0 0 0],...
	'Value',itx);

	call_st = [ var '=' 'get(get(gcf,''CurrentObject''),''Value'')==1;'];
	set(ed,'Callback',call_st);
	return
end

if type==6
	num_op = length(h_pos);
	mat = zeros([1 num_op]);

	for i=1:num_op
		tx = deblank(text(i,:));
		cb_pos = [h_pos(i)*CHW v_pos(i)*SEP (length(tx)+2)*CHW SEP];
		ed = uicontrol(gcf,'Style','radiobutton','Position',cb_pos,...
		'String',tx,'BackGroundColor',back,'ForeGroundColor',[0 0 0],...
		'Max',itx(i+1),'Min',-1);
		mat(i) = ed;		% Save all control numbers
	end

	for i=1:num_op
		set(mat(i),'UserData',mat);	% Save mat in all controls
		if itx(1) == itx(i+1), set(mat(i),'Value',get(mat(i),'Max'));
		else set(mat(i),'Value',get(mat(i),'Min'));
		end

		call_st = [	'eemat = get(get(gcf,''CurrentObject''),''UserData''); '...
				'for ee0 = 1:length(eemat), '...
				'if get(gcf,''CurrentObject'') == eemat(ee0), '...
				'set(eemat(ee0),''Value'',get(eemat(ee0),''Max'')); '...
				'else '...
				'set(eemat(ee0),''Value'',get(eemat(ee0),''Min'')); '...
				'end; '...	% if
				'end; '...	% for
				var '=' 'get(get(gcf,''CurrentObject''),''Value''); '...
			   ];
		set(mat(i),'CallBack',call_st);
	end
ed = mat;								% Handles returned
return
end

if type==0,
	if length(h_pos) > 1, ntx_n = h_pos(2); else ntx_n = NTX_N; end
	if length(h_pos) > 2, ed_n = h_pos(3); else ed_n = ED_N; end
	ed_pos = [(h_pos(1)+ntx_n+1)*CHW SEP*v_pos ed_n*CHW CHH];
	tx_pos = [h_pos(1)*CHW SEP*v_pos ntx_n*CHW CHH];
end

if type==1 | type==7 | type==8,
	if length(h_pos) > 1, stx_n = h_pos(2); else stx_n = STX_N; end
	if length(h_pos) > 2, sed_n = h_pos(3); else sed_n = SED_N; end
	ed_pos = [(h_pos(1)+stx_n+1)*CHW SEP*v_pos sed_n*CHW CHH];
	tx_pos = [h_pos(1)*CHW SEP*v_pos stx_n*CHW CHH];
end

ed = uicontrol(gcf,...
'Position',ed_pos,...
'HorizontalAlignment','Right',...
'BackGroundColor',[0 0 1],...
'ForeGroundColor',[1 1 1]);

if type==0 | type == 1,
	set(ed,'Style','Edit','String',itx);
end

if type == 8,
	if length(itx) == 0, sitx = '[ ]';
	else,
		sitx = '[';
		for i=1:length(itx), sitx = [sitx num2str(itx(i)) ' '];	end
		sitx = sitx(1:length(sitx)-1);
		sitx = [sitx ']'];
	end
	set(ed,'Style','Edit','String',sitx);
end

if type==7,
	set(ed,'Style','popup');
	[m,n]=size(itx);
	ee_tmp = deblank(itx(3,:));
	if strcmp(itx(3,:),itx(2,:)), tmp_val=1; else tmp_val=0; end
	for i=4:m,
		ee_tmp = [ee_tmp '|' deblank(itx(i,:))];
		if strcmp(itx(i,:),itx(2,:)), tmp_val=i-2; end
	end
	set(ed,'String',ee_tmp);
	if tmp_val > 0, set(ed,'Value',tmp_val); end
end

tx = uicontrol(gcf,'Style','Text',...
'String',text,...
'Position',tx_pos,...
'BackGroundColor',back,...
'HorizontalAlignment','Right');

if type==7,
	call_st = [ var '=' itx(1,:) ';',...
		    var '=deblank(' var '(get(get(gcf,''CurrentObject''),''Value''),:));'];
end

if type==1,
	call_st = [ var '=get(get(gcf,''CurrentObject''),''String'');'];
end

if type==8,
	call_st = [ var '=get(get(gcf,''CurrentObject''),''String''); '...
			var '=eval(' var ');'];
end

if type==0,
	call_st = [ var '=str2num(get(get(gcf,''CurrentObject''),''String''));'];
end

ed = [tx ed];									% Handles returned
set(ed(2),'Callback',call_st);
